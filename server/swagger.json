{
  "openapi": "3.0.0",
  "info": {
    "description": "API documentation for doit4me app",
    "version": "1.0.0",
    "title": "Swagger doit4me",
    "contact": {
      "email": "in43sh@gmail.com"
    }
  },
  "schemes": [
    "http"
  ],
  "host": "petstore.swagger.io",
  "basePath": "/v2",
  "paths": {
    "/user/create": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create a new user",
        "description": "createUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "nickname",
            "type": "string",
            "in": "path",
            "description": "Nickname",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          },
          {
            "name": "password",
            "type": "string",
            "in": "path",
            "description": "Password",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          },
          {
            "name": "email",
            "type": "string",
            "in": "path",
            "description": "Email",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          },
          {
            "name": "ip",
            "type": "string",
            "in": "path",
            "description": "List of IP addresses. Has to be array",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          },
          {
            "name": "zip",
            "type": "integer",
            "in": "path",
            "description": "User ZIP code",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          },
          {
            "name": "personal",
            "type": "string",
            "in": "path",
            "description": "Personal information. Has to be object",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          },
          {
            "name": "rating",
            "type": "float",
            "in": "path",
            "description": "Rating",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          },
          {
            "name": "avatar",
            "type": "string",
            "in": "path",
            "description": "Profile photo. Has to be base64",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get all the users",
        "description": "getAllUsers",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/user/get/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get a single user",
        "description": "getSingleUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/user/update/{id}": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update user info",
        "description": "updateUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/user/delete/{id}": {
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete a user",
        "description": "updateUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/task/create": {
      "post": {
        "tags": [
          "Task"
        ],
        "summary": "Create a new task",
        "description": "createTask",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "title",
            "type": "string",
            "in": "path",
            "description": "Title",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Task"
            }
          },
          {
            "name": "category",
            "type": "string",
            "in": "path",
            "description": "Category",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Task"
            }
          },
          {
            "name": "creator_id",
            "type": "integer",
            "in": "path",
            "description": "Id of task creator",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Task"
            }
          },
          {
            "name": "contractor_id",
            "type": "integer",
            "in": "path",
            "description": "Id of task contractor",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Task"
            }
          },
          {
            "name": "price",
            "type": "integer",
            "in": "path",
            "description": "Price",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Task"
            }
          },
          {
            "name": "description",
            "type": "string",
            "in": "path",
            "description": "Description",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Task"
            }
          },
          {
            "name": "zip",
            "type": "integer",
            "in": "path",
            "description": "ZIP code",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Task"
            }
          },
          {
            "name": "deadline",
            "type": "date",
            "in": "path",
            "description": "Personal information. Has to be object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Task"
            }
          },
          {
            "name": "status",
            "type": "string",
            "in": "path",
            "description": "Rating",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Task"
            }
          },
          {
            "name": "photos",
            "type": "string",
            "in": "path",
            "description": "Profile photo. Has to be base64",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Task"
            }
          },
          {
            "name": "requests",
            "type": "string",
            "in": "path",
            "description": "Profile photo. Has to be base64",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/tasks": {
      "get": {
        "tags": [
          "Task"
        ],
        "summary": "Get all the tasks",
        "description": "getAllTasks",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/task/get/{id}": {
      "get": {
        "tags": [
          "Task"
        ],
        "summary": "Get a single task",
        "description": "getSingleTask",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/task/update/{id}": {
      "put": {
        "tags": [
          "Task"
        ],
        "summary": "Update task info",
        "description": "updateTask",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/task/delete/{id}": {
      "delete": {
        "tags": [
          "Task"
        ],
        "summary": "Delete a task",
        "description": "updateTask",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/review/create": {
      "post": {
        "tags": [
          "Review"
        ],
        "summary": "Create a new review",
        "description": "createReview",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "task_id",
            "type": "integer",
            "in": "path",
            "description": "Id of the task",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Review"
            }
          },
          {
            "name": "creator_id",
            "type": "integer",
            "in": "path",
            "description": "Id of task creator",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Review"
            }
          },
          {
            "name": "contractor_id",
            "type": "integer",
            "in": "path",
            "description": "Id of task contractor",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Review"
            }
          },
          {
            "name": "rate",
            "type": "integer",
            "in": "path",
            "description": "Rate of the task",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Review"
            }
          },
          {
            "name": "description",
            "type": "string",
            "in": "path",
            "description": "Review content",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Review"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/reviews": {
      "get": {
        "tags": [
          "Review"
        ],
        "summary": "Get all the reviews",
        "description": "getAllReviews",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/review/get/{id}": {
      "get": {
        "tags": [
          "Review"
        ],
        "summary": "Get a single review",
        "description": "getSingleReview",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Review"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/review/update/{id}": {
      "put": {
        "tags": [
          "Review"
        ],
        "summary": "Update a single review",
        "description": "updateSingleReview",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Review"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/review/delete/{id}": {
      "delete": {
        "tags": [
          "Review"
        ],
        "summary": "Delete a single review",
        "description": "deleteSingleReview",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "type": "integer",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Review"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "nickname": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "ip": {
            "type": "string"
          },
          "zip": {
            "type": "integer"
          },
          "personal": {
            "type": "string"
          },
          "rating": {
            "type": "float"
          },
          "avatar": {
            "type": "string"
          }
        }
      },
      "Task": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "creator_id": {
            "type": "integer"
          },
          "contractor_id": {
            "type": "integer"
          },
          "price": {
            "type": "integer"
          },
          "description": {
            "type": "string"
          },
          "zip": {
            "type": "integer"
          },
          "deadline": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string"
          },
          "photos": {
            "type": "string"
          },
          "requests": {
            "type": "string"
          }
        }
      },
      "Review": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "task_id": {
            "type": "integer"
          },
          "creator_id": {
            "type": "integer"
          },
          "contractor_id": {
            "type": "integer"
          },
          "rate": {
            "type": "integer"
          },
          "description": {
            "type": "string"
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Successful action!"
      },
      "404": {
          "description": "Not found!"
      },
      "500": {
          "description": "Internal server error!"
      }
    }
  }
}